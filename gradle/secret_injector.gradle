// Reads a JSON file and assigns each root level entry to a Gradle project
// property with the same name as the entry key. This can be used to mass
// inject screts via CI.
import groovy.json.JsonSlurper

// Auto detects a secret file and injects it.
if (project.hasProperty('secretFile')) {

    final def secretsFile = file project.getProperty('secretFile')
    
    if (secretsFile.exists() && secretsFile.name.endsWith('.json)) {
    
        loadSecrets(secretsFile)
    }
}

// Loads secrets using a specified json file.
def loadSecrets(secretFile) {

    if (secretFile.exists()) {
    
        secretFile.withReader {
        
            Map secretMap = new JsonSlurper().parse it
            
            for (entry in secretMap) {
            
                project.ext.set(entry.key, entry.value)
            }
            
            project.logger.lifecycle('Successfully loaded ' + secretMap.size() + ' secret properties')
            secretMap.clear()
        }
    }
    
    else {
    
        project.logger.warn('The secret file ' + secretFile.getName() + ' could not be loaded. It does not exist.')
    }
}

// This allows other projects to use these methods.
ext {
    loadSecrets = this.&loadSecrets
}
