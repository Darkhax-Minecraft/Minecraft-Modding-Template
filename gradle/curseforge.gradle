buildscript {

    repositories {
    
        mavenCentral()
        maven { 
        
            url 'https://plugins.gradle.org/m2/'
        }
    }
    
    dependencies {
    
        classpath group: 'gradle.plugin.com.matthewprenger', name: 'CurseGradle', version: '1.4.0'
        classpath group: 'com.diluv.schoomp', name: 'Schoomp', version: '1.1.0'
    }
}

import com.diluv.schoomp.Webhook
import com.diluv.schoomp.message.Message
import com.diluv.schoomp.message.embed.Embed
import com.diluv.schoomp.message.embed.Footer

apply from: 'gradle/property_helper.gradle'
apply plugin: com.matthewprenger.cursegradle.CurseGradlePlugin

def releaseType = getDefaultString('curse_release_type', 'alpha')

curseforge {

    if (project.hasProperty('curse_project') && project.hasProperty('curse_auth')) {
    
        apiKey = findProperty('curse_auth') ?: 0 
    
        project {

            id = "${curse_project}"
            releaseType = releaseType
            changelog = project.ext.changelog
            changelogType = 'markdown'

            for (String version : getDefaultString('curse_versions', '').split(', ')) {
        
                addGameVersion version
            }

            mainArtifact(jar) {
            
                relations {

                    if (project.hasProperty('curse_requirements')) {
                
                        for (String req : project.findProperty('curse_requirements').split(', ')) {
                    
                            requiredLibrary req
                        }
                    }
                
                    if (project.hasProperty('curse_optionals')) {
                
                        for (String req : project.findProperty('curse_optionals').split(', ')) {
                    
                            optionalLibrary req
                        }
                   }
                }
            }
        }
    }
}

if (project.hasProperty('discordCFWebhook')) {

    tasks.getByName("curseforge").doLast {
    
        try {
    
            // Reads the file ID given to us by CurseForge
            def newFileId = tasks.getByName("curseforge${curse_project}").property('mainArtifact').fileID
    
            def webhook = new Webhook(findProperty('discordCFWebhook'), "${project.findProperty('mod_name')} Gradle Upload");
        
            def message = new Message();        
            message.setUsername(findProperty('mod_name'));
            message.setContent("${project.findProperty('mod_name')} ${version} for Minecraft ${findProperty('minecraft_version')} has been released! The download will be public soon.");
        
            def embed = new Embed();
            embed.addField('Download', "${project.findProperty('curse_page')}/files/$newFileId", false);
            embed.addField('Change Log', "${getGitChangelog() ?: 'Unavailable :('}", false);
            embed.setColor(0xFF8000);           
            message.addEmbed(embed);

            webhook.sendMessage(message);
        }
    
        catch (IOException e) {
        
            project.logger.error('Failed to push CF Discord webhook.')
        }
    }
}